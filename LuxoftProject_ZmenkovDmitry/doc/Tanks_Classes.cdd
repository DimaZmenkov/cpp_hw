<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<c:Diagram
xmlns:c="http://www.cadifra.com/schema/1.0"
xmlns:c1v3="http://www.cadifra.com/schema/1.3"
ProductVersion="1.3.3">

<Page id="r1"
Size="9"
Width="21000"
Height="29700"
Rows="1"
Columns="1"
Margins="1000 1000 1000 1000"
CutGlueMargins="1000 1000 1000 1000"
Scale="1"/>

<DiagramType id="r2"
TypeValue="1"/>

<Style id="r3">
<dir n="Base" Typeface="arial" Size="11" Bold="0">
<dir n="Class Diagram">
<dir n="Association" Bold="1"/>
<dir n="Class" Bold="0">
<dir n="Attached Text"/>
<dir n="Compartment" Size="8"/>
<dir n="Header" Bold="1"/>
<dir n="Template Parameters" Size="8"/>
</dir>
<dir n="Multiplicity, Role" Bold="0"/>
<dir n="Package" Bold="1"/>
</dir>
<dir n="Dependency" Bold="0"/>
<dir n="Free Text" Size="10" Bold="0"/>
<dir n="Note" Size="9" Bold="0"/>
</dir>
</Style>

<Class id="r4"
Pos="8400 -900"
Size="9100 6700">
<Text>Game<p/>
</Text>
<Compartment id="r5"
Pos="8400 -2600"
Size="9100 2200">
<Text>- isWin_:bool<p/>
- quantityTanks_:int<p/>
- widthWalls_ : int<p/>
-tanks_ :std::vector&lt;Tank&gt;<p/>
mainTank_; Tank<p/>
…</Text>
</Compartment>
<Compartment id="r6"
Pos="8400 -4800"
Size="9100 2800"
Previous="r5">
<Text>« constructor  »<p/>
Game()<p/>
+drawTanks() :  void<p/>
+ createTanks() : void<p/>
+Run() : void<p/>
+ isIntersectRects( wall1 :const Rect&amp;,  wall2:const Rect&amp;) const:bool<p/>
+  KeyPressed( btnCode : int) : void<p/>
…</Text>
</Compartment>
</Class>

<Class id="r7"
Pos="12500 -11700"
Size="4100 7100">
<Text>Tank<p/>
</Text>
<Compartment id="r18"
Pos="12500 -12800"
Size="4100 2800">
<Text>-coord_ :Point <p/>
<p/>
-lastCoord_;  Point <p/>
 -width_; int <p/>
 -height_;  int<p/>
 -life_; int <p/>
 - direction_:Direction<p/>
- isMain_ :bool</Text>
</Compartment>
<Compartment id="r19"
Pos="12500 -15600"
Size="4100 3200"
Previous="r18">
<Text> + shoot (Bullet&amp; bullet):void<p/>
  +getRect() const override; const Rect&amp;<p/>
 +decrementLife() : void<p/>
 + getLife(): int <p/>
+ move()  override: void<p/>
 virtual getIsMain()  override : bool<p/>
 + draw( dc : HDC): void</Text>
</Compartment>
</Class>

<Assoc id="r8">
<End id="r9"
Pos="14500 -7600"
Class="r4"
Type="1"/>
<Segment id="r10"
Ends="r9 r15">
<Anchor id="r11"
Pos="14500 -8500">
<FreeText id="r12"
Pos="14500 -8592"
Origin="4">
<Text>agregation<p/>
</Text>
</FreeText>
</Anchor>
<Anchor id="r13"
Pos="14500 -9400">
<FreeText id="r14"
Pos="14400 -8992"
Origin="4">
<Text>composition<p/>
</Text>
</FreeText>
</Anchor>
</Segment>
<End id="r15"
Pos="14500 -11700"
Class="r7"
Type="1"/>
</Assoc>

<Class id="r16"
Pos="8200 -11900"
Size="3400 6000">
<Text>bullet<p/>
</Text>
<Compartment id="r17"
Pos="8200 -13500"
Size="3400 2200">
<Text>- speed_; int<p/>
 - direction_; Direction <p/>
  rect_; Rect<p/>
- isMain_; bool <p/>
 - count : int</Text>
</Compartment>
<Compartment id="r20"
Pos="8200 -15700"
Size="3400 2200"
Previous="r17">
<Text><p/>
 +move() override :void<p/>
 +getRect() override; const Rect&amp;<p/>
 +getIsMain() override: bool</Text>
</Compartment>
</Class>

<Assoc id="r21">
<End id="r22"
Pos="10300 -11900"
Class="r16"
Type="1"/>
<Segment id="r23"
Ends="r22 r24">
<Anchor id="r25"
Pos="10300 -8500">
<FreeText id="r26"
Pos="10500 -8500"
Origin="1">
<Text>agregation<p/>
</Text>
</FreeText>
</Anchor>
</Segment>
<End id="r24"
Pos="10300 -7600"
Class="r4"
Type="1"/>
</Assoc>

<Class id="r27"
Pos="1500 -13100"
Size="6000 3700"
Abstract="1">
<Text>Factory</Text>
<Compartment id="r48"
Pos="1500 -14100"
Size="6000 800">
<Text>&lt;text?&gt;</Text>
</Compartment>
<Compartment id="r49"
Pos="1500 -14900"
Size="6000 1900"
Previous="r48">
<Text>+ virtual createMilitaryInstance() =0:MilitaryInstance* </Text>
</Compartment>
</Class>

<Class id="r28"
Pos="300 -17700"
Size="2900 3700">
<Text>BulletsFactory</Text>
<Compartment id="r47"
Pos="300 -18700"
Size="2900 1500">
<Text> </Text>
</Compartment>
<Compartment id="r50"
Pos="300 -20200"
Size="2900 1200"
Previous="r47">
<Text>virtual createMilitaryInstance() :MilitaryInstance*</Text>
</Compartment>
</Class>

<Class id="r29"
Pos="4900 -20500"
Size="2800 3000">
<Text>TanksFactory</Text>
<Compartment id="r51"
Pos="4900 -21500"
Size="2800 800">
<Text>&lt;text?&gt;</Text>
</Compartment>
<Compartment id="r52"
Pos="4900 -22300"
Size="2800 1200"
Previous="r51">
<Text>+virtual createMilitaryInstance() :MilitaryInstance*</Text>
</Compartment>
</Class>

<Generalization id="r30">
<End id="r31"
Pos="2300 -17700"
Class="r28"
Type="2"/>
<Segment id="r32"
Ends="r31 r33"/>
<End id="r33"
Pos="2300 -16800"
Class="r27"
Type="1"/>
</Generalization>

<Class id="r34"
Pos="12600 -22000"
Size="3200 4600"
Abstract="1">
<Text>MilitaryInstance</Text>
<Compartment id="r53"
Pos="12600 -23000"
Size="3200 800">
<Text>&lt;text?&gt;</Text>
</Compartment>
<Compartment id="r54"
Pos="12600 -23800"
Size="3200 2800"
Previous="r53">
<Text>+ virtual  ~ MilitaryInstance()<p/>
+virtual  move() = 0 ;void<p/>
 + virtual getRect() const  = 0 ::const Rect&amp;<p/>
+ virtual getIsMain() = 0 : bool</Text>
</Compartment>
</Class>

<Generalization id="r35">
<End id="r36"
Pos="15200 -22000"
Class="r34"
Type="2"/>
<Segment id="r37"
Ends="r36 r38"/>
<End id="r38"
Pos="15200 -18800"
Class="r7"
Type="1"/>
</Generalization>

<Generalization id="r39">
<End id="r40"
Pos="6200 -20500"
Class="r29"
Type="2"/>
<Segment id="r41"
Ends="r40 r42"/>
<Join id="r42"
Pos="6200 -17200"/>
<Segment id="r43"
Ends="r42 r44"/>
<Join id="r44"
Pos="2800 -17200"/>
<Segment id="r45"
Ends="r44 r46"/>
<End id="r46"
Pos="2800 -16800"
Class="r27"
Type="1"/>
</Generalization>

<Generalization id="r55">
<End id="r56"
Pos="13700 -22000"
Class="r34"
Type="2"/>
<Segment id="r57"
Ends="r56 r58"/>
<Join id="r58"
Pos="13700 -21700"/>
<Segment id="r59"
Ends="r58 r60"/>
<Join id="r60"
Pos="10000 -21700"/>
<Segment id="r61"
Ends="r60 r62"/>
<End id="r62"
Pos="10000 -17900"
Class="r16"
Type="1"/>
</Generalization>

<Dependency id="r63">
<End id="r64"
Pos="6400 -23500"
Party="r29"
Type="1"/>
<Segment id="r65"
Ends="r64 r66"/>
<Join id="r66"
Pos="6400 -26900"/>
<Segment id="r67"
Ends="r66 r68"/>
<Join id="r68"
Pos="16100 -26900"/>
<Segment id="r69"
Ends="r68 r70"/>
<End id="r70"
Pos="16100 -18800"
Party="r7"
Type="2"/>
</Dependency>

<Dependency id="r71">
<End id="r72"
Pos="1000 -17700"
Party="r28"
Type="1"/>
<Segment id="r73"
Ends="r72 r74"/>
<Join id="r74"
Pos="1000 -12200"/>
<Segment id="r75"
Ends="r74 r76"/>
<Join id="r76"
Pos="9600 -12200"/>
<Segment id="r77"
Ends="r76 r78"/>
<End id="r78"
Pos="9600 -11900"
Party="r16"
Type="2"/>
</Dependency>

</c:Diagram>
